services:
  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: fglabel_rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    ports:
      - "${RABBITMQ_HOST_PORT}:5672"
      - "${RABBITMQ_MAN_PORT}:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 15s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7.2
    container_name: fglabel_redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 15s
      timeout: 5s
      retries: 5

  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
    container_name: fglabel_api_gateway
    depends_on:
      rabbitmq:
        condition: service_started
      redis:
        condition: service_healthy
    environment:
      - JWT__Key=${JWT__Key}
      - JWT__Issuer=${JWT__Issuer}
      - JWT__Audience=${JWT__Audience}
      - ConnectionStrings__DefaultConnection=${MSSQL_CONN}
      - RABBITMQ__HostName=${RabbitMQ__HostName}
      - RABBITMQ__UserName=${RabbitMQ__UserName}
      - RABBITMQ__Password=${RabbitMQ__Password}
      - Redis__ConnectionString=${Redis__ConnectionString}
      - FRONTEND_URL=${FRONTEND_URL}
      - AD__Url=${AD__Url}
      - AD__BaseDn=${AD__BaseDn}
      - AD__Username=${AD__Username}
      - AD__Password=${AD__Password}
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - DOTNET_ENVIRONMENT=${DOTNET_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:${API_PORT}
      - BYPASS_LDAP=${BYPASS_LDAP}
    ports:
      - "${API_PORT}:${API_PORT}"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:${API_PORT}/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  worker:
    build:
      context: .
      dockerfile: ./apps/worker-service/Dockerfile
    container_name: fglabel_worker
    depends_on:
      rabbitmq:
        condition: service_started
      redis:
        condition: service_healthy
    environment:
      - JWT__Key=${JWT__Key}
      - JWT__Issuer=${JWT__Issuer}
      - JWT__Audience=${JWT__Audience}
      - ConnectionStrings__DefaultConnection=${MSSQL_CONN}
      - RABBITMQ__HostName=${RabbitMQ__HostName}
      - RABBITMQ__UserName=${RabbitMQ__UserName}
      - RABBITMQ__Password=${RabbitMQ__Password}
      - Redis__ConnectionString=${Redis__ConnectionString}
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - DOTNET_ENVIRONMENT=${DOTNET_ENVIRONMENT}
    healthcheck:
      test: ["CMD-SHELL", "exit 0"]
      interval: 60s
      timeout: 10s
      retries: 3

  web-ui:
    build:
      context: .
      dockerfile: ./apps/web-ui/Dockerfile
    container_name: fglabel_web
    depends_on:
      api-gateway:
        condition: service_healthy
    environment:
      - NODE_ENV=${NODE_ENV}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_PUBLIC_SIGNALR_URL=${NEXT_PUBLIC_SIGNALR_URL}
    ports:
      - "${WEB_PORT}:3500"

volumes:
  redis_data: